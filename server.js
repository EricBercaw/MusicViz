// server.js
import https from 'https';
import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';
import express from 'express';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// Load SSL certs generated by mkcert (adjust names if different)
const options = {
  key: fs.readFileSync(path.join(__dirname, 'localhost+2-key.pem')),
  cert: fs.readFileSync(path.join(__dirname, 'localhost+2.pem'))
};

const app = express();

app.use((req, res, next) => {
  res.setHeader(
    "Content-Security-Policy",
    [
      "default-src 'self'",
      "script-src 'self' https://sdk.scdn.co",             // add 'unsafe-eval' here only if truly needed
      "connect-src 'self' https://api.spotify.com https://accounts.spotify.com",
      "img-src 'self' data: https:",
      "style-src 'self' 'unsafe-inline'"
    ].join("; ")
  );
  next();
});

// Serve static files (your index.html, css, js)
app.use(express.static(__dirname));

// Serve the SPA at /callback so the OAuth response (#access_token or ?code) can be parsed by index.html
app.get('/callback', (req, res) => {
  res.sendFile(path.join(__dirname, 'index.html'));
});

const PORT = 3000;

https.createServer(options, app).listen(PORT, () => {
  console.log(`HTTPS server running at https://localhost:${PORT}`);
});
